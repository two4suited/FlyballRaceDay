@using Microsoft.Extensions.Logging.Console
@inject ApiServiceClient client
@inject ILogger<CreateTournament> logger
@using System.Text.Json
@rendermode InteractiveServer


<h3>CreateTournament</h3>
<EditForm Model="@Model" OnValidSubmit="@Submit" FormName="tournament-create">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>
            Name of Tournament:
            <InputText @bind-Value="Model!.EventName" />
        </label>
    </div>
    <div>
        <label>
            Start Date:
            <InputDate @bind-Value="Model!.StartDate" />
        </label>
    </div>
    <div>
        <label>
            End Date:
            <InputDate @bind-Value="Model!.EndDate"  />
        </label>
    </div>
    <div>
                <label>
                    Number of Lanes:
                    <InputNumber @bind-Value="Model!.NumberOfLanes" />
                </label>
            </div>
    <button type="submit">Submit</button>
    
</EditForm>

@code {
    private TournamentCreate? Model { get; set; }

    protected override void OnInitialized() => Model ??= new() { StartDate = DateTime.Now,EndDate = DateTime.Now};
    

    private async Task Submit()
    {
        logger.LogInformation(JsonSerializer.Serialize(Model));
        var response = await client.TournamentPOSTAsync(Model);
        logger.LogInformation(JsonSerializer.Serialize(response));
    }
    
    
}