name: 'Terraform Setup and Apply'
description: 'Sets up and applies Terraform configurations'
inputs:
  tfcloudapikey:
    description: 'Terraform Cloud API Key'
    required: true
  application_name:
    description: 'Application Name'
    required: true
  terraform_directory:
    description: 'Terraform Directory'
    required: true
    default: 'infrastructure'
  terraform_tags:
    description: 'Terraform Tags'
    required: true
  terraform_command_options:
    description: 'Terraform Command Options'
    required: true
  environment:
    description: 'Environment'
    required: true

runs:
  using: "composite"
  steps:
    - run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          touch $HOME/.terraformrc
          echo 'credentials "app.terraform.io" { token = "${{ inputs.tfcloudapikey }}" }' > $HOME/.terraformrc
        else
          echo "credentials `"app.terraform.io`" { token = `"${{ inputs.tfcloudapikey }}" }" > "$env:APPDATA\terraform.rc"
        fi
      shell: bash
      id: create-cli-file

    - run: |
        echo "Set TF_Workspace to ${{ inputs.application_name }}-Local"
        export TF_WORKSPACE=${{ inputs.application_name }}-local
        echo "Change Directory to ${{ inputs.terraform_directory }}"
        cd ${{ github.workspace }}/${{ inputs.terraform_directory }}
        echo "Initialize Terraform"
        terraform init
        echo "Unset TF_Workspace"
        unset TF_WORKSPACE
        echo "Select or Create Workspace ${{ inputs.application_name }}-${{ inputs.environment }}"
        terraform workspace select -or-create ${{ inputs.application_name }}-${{ inputs.environment }}
        echo "Apply"
        terraform apply -auto-approve ${{ inputs.terraform_tags }} ${{ inputs.terraform_command_options }}
      shell: bash
      id: terraform-commands
