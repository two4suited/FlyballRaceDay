openapi: 3.0.0
info:
  version: 1.0.0
  title: Flyball Race Day API
  description: API for Flyball Race Day

servers:
- url: https://api.example.com/v1

paths:
  /tournament:
   get:
    summary: Tournament - Get All Active
    operationId: getalltournaments
    tags:
      - "Tournament"
    responses:
      '200':
        description: Got All Active Tournaments
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Tournament'
      '500':
        description: Error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
   post:
    summary: Tournament - Create
    operationId: createTournament
    tags:
      - "Tournament"
    responses:
     '200':
       description: Tournament Created
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/Tournament'
     '500':
        description: Error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
  /tournament/{id}:
    put:
      summary: Tournament - Update 
      operationId: updateTournament
      tags:
        - "Tournament"
      parameters:
         - name: id
           in: path
           required: true  
           schema:
             type: string
      responses:
        '200':
          description: Update Tournament
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tournament'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
       summary: Tournament - Delete
       operationId: deleteTournament
       parameters:
        - name: id
          in: path
          required: true  
          schema:
            type: string
       tags:
         - "Tournament"
       responses:
         '200':
           description: Deleted Tournament
           content:
             application/json:
               schema:
                $ref: '#/components/schemas/Message'
         '500':
           description: Error
           content:
            application/json:
               schema:
                 $ref: '#/components/schemas/Error'
  /schedule:
    post:
      summary: Schedule - Upload
      operationId: createSchedule
      tags: ["Schedule"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Race'
      responses:
        '200':
          description: Tournament Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Race'
        '500':
            description: Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /schedule/{tournamentid}:
      get:
        summary: Schedule - Get By Tournament Id
        operationId: getschedulebyid
        tags: ["Schedule"]
        parameters:
          - name: tournamentid
            in: path
            required: true  
            schema:
              type: string
        responses:
          '200':
            description: Get All Races for Tournament
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Race'
          '500':
            description: Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /races/{tournamentId}:
    get:
      summary: Races - Upcoming
      operationId: getraces
      tags: ["Races"]
      parameters:
       - name: tournamentId
         in: path
         required: true
         schema:
            type: string      
      responses:
          '200':
            description: Get Upcoming Races
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Race'
          '500':
            description: Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /races/done/{tournamentid}/{racenumber}:
    put: 
      summary: Races - Mark Race as Done
      operationId: racemarkasdone
      tags: ["Races"]
      parameters:
          - name: tournamentid
            in: path
            required: true  
            schema:
              type: string 
          - name: racenumber
            in: path
            required: true  
            schema:
              type: string     
      responses:
          '200':
            description: Get Upcoming Races
            content:
              application/json:
                schema:
                    $ref: '#/components/schemas/Race'
          '500':
            description: Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /races/{tournamentid}/{racenumber}/{ringid}:
    put: 
      summary: Races - Add To Ring
      operationId: raceupnext
      tags: ["Races"]
      parameters:
          - name: tournamentid
            in: path
            required: true  
            schema:
              type: string 
          - name: racenumber
            in: path
            required: true  
            schema:
              type: string 
          - name: ringid
            in: path
            required: true
            schema:
              type: string  
      responses:
          '200':
            description: Race Added to Up Next
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Race'
          '500':
            description: Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /ring/{tournamentId}/{ringId}:
    put:
      summary: Ring - Update Ring 
      operationId: updateRing
      tags: ["Ring"]
      parameters:
        - name: tournamentId
          in: path
          required: true
          schema:
            type: string
        - name: ringId
          in: path
          required: true
          schema:
            type: string
      responses:
          '200':
            description: Got Rings
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Ring'
          '500':
            description: Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'   
  /ring/{tournamentId}:
    get:
      summary: Ring - Get Ring By Tournament
      operationId: getRings
      tags: ["Ring"]
      parameters:
        - name: tournamentId
          in: path
          required: true
          schema:
            type: string
      responses:
          '200':
            description: Got Rings
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Ring'
          '500':
            description: Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'        
    post:
      summary: Ring - Add Ring
      operationId: addRing
      tags: ["Ring"]
      parameters:
        - name: tournamentId
          in: path
          required: true
          schema:
            type: string
      responses:
          '200':
            description: Ring Added
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Ring'
          '500':
            description: Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'      


components:
  schemas:
    Tournament:
      type: object
      properties:
        Id:
          type: string
          example: "1"
        EventName:
          type: string
          example: "Tourney 1" 
        StartDate:
          type: string
          example: "2023-11-23T00:00:00Z"
        EndDate: 
          type: string
          example: "2023-11-23T00:00:00Z"
        NumberOfLanes: 
          type: integer
          example: 2
        Region:
          type: string
          example: Region 2
    Error:
      type: object
      properties:
        ErrorCode: 
          type: string
          example: "500"
        ErrorMessage:
          type: string
          example: "Not able to get to databse"
    Race:
      type: object
      properties:
        RaceNumber:
          type: string
          example: "1"
        LeftTeam:
          type: string
          example: "Left Team"
        RightTeam:
          type: string
          example: "Right Team"
        Format:
          type: string
          example: "4/4"
        Division:
          type: string
          example: "Open 1"
        Breakout: 
          type: string
          example: "N/A"
        Break:
          type: string
          example: "true"
        BreakTime:
          type: string
          description: Break Time in Minutes
          example: "5"
        RingId:
          type: string
          example: "1"
    Message:
      type: object
      properties:
        Message:
          type: string
          example: "This is Message"
    Ring:
      type: object
      properties:
        Id:
          type: string
          example: 1
        TournamentId:
          type: string
          example: 1
        Name:
          type: string
          example: "Green Ring"
        Color:
          type: string
          example: "Green"